%--------------------------------------------------------------------------
% Main.m
%
% Description: This program first pulls the most recent data from Johns
% Hopkins' Github account which contains the most up to date CDC and WHO
% data. Using this data, a parser is used to gather the data for a country
% or province of interest. Plots are created to visulize the current
% outbreak of COVID19.
%  
% Author: Isaac Weintraub
%--------------------------------------------------------------------------
clear 
clc
close all
% Population Information for Countries of Interest

popUSA = 327.2e6;
popOhio = 11.69e6;
popFL = 21.3e6;
popSK = 51.47e6;
popItaly =  60.48e6;
popFr = 66.99e6;
popIran = 81.16e6;
popSpain = 46.66e6;
popIceland = 364260;
popChina = 1.386e9;
popNY = 8.623e6;
popEarth = 7.53e9;

%
% Pull the most up-to-date information
%

% Uncomment or run this in the terminal the first time you run the code
%!git clone https://github.com/CSSEGISandData/COVID-19.git
cd COVID-19
!git pull
cd ..

%
% Import the data from CSV format to matlab cell or matrix 
%
cases     = importdata("COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv");
deaths    = importdata("COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv");
recovered = importdata("COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv");

Country = cases.textdata(:,2);
Province = cases.textdata(:,1);

% % %
% % % Display the Country List Allow User to Select Country of Interest
% % % 
% % CountryShort = unique(Country);
% % ProvinceShort = unique(Province);
% % list = CountryShort;
% % [choice,~] = listdlg('ListString',list);
% % isCountry = strcmp(Country,CountryShort(choice));     % Generate Index of Values for the chosen country
% % isCountry = isCountry(2:end);           % Remove Header
% % 
% % 
% % Population(choice)
% % switch(choice)
% %     case(162) % USA
% %         popC = 327.2e6;
% % end

%
% USA
isUSA = strcmp(Country,'US'); 
%isUSA(200:end) = 0;      % Ignore minor outlaying islands
isUSA = isUSA(2:end);     % Remove the header
% Ohio
isOhio = strcmp(Province,'Ohio');
isOhio = isOhio(2:end);
% FLorida
isFL   = strcmp(Province,'Florida');
isFL   = isFL(2:end);
% NY
isNY = strcmp(Province,'New York');
isNY = isNY(2:end);
% China
isChina = strcmp(Country,'China');
isChina = isChina(2:end);
% South Korea
isSK = strcmp(Country,'Korea, South');
isSK = isSK(2:end);
% Iran
isIran = strcmp(Country,'Iran');
isIran = isIran(2:end);
% Italy
isItaly = strcmp(Country,'Italy');
isItaly = isItaly(2:end);
% Spain
isSpain = strcmp(Country,'Spain');
isSpain = isSpain(2:end);
% France
isFrance = strcmp(Country,'France');
isFrance = isFrance(2:end);
% Iceland
isIceland = strcmp(Country,'Iceland');
isIceland = isIceland(2:end);
% Earth
isEarth = ones(size(isUSA));
isEarth = isEarth(2:end);



index = 0;
for i = 3:size(cases.data,2)-1
    
    casesUSA(i-2)     = sum(cases.data(isUSA,i));
    deathsUSA(i-2)    = sum(deaths.data(isUSA,i));
    recoveredUSA(i-2) = sum(recovered.data(isUSA,i));

    casesIceland(i-2)     = sum(cases.data(isIceland,i));
    deathsIceland(i-2)    = sum(deaths.data(isIceland,i));
    recoveredIceland(i-2) = sum(recovered.data(isIceland,i));
    
    casesItaly(i-2)     = sum(cases.data(isItaly,i));
    deathsItaly(i-2)    = sum(deaths.data(isItaly,i));
    recoveredItaly(i-2) = sum(recovered.data(isItaly,i));

    casesChina(i-2)     = sum(cases.data(isChina,i));
    deathsChina(i-2)    = sum(deaths.data(isChina,i));
    recoveredChina(i-2) = sum(recovered.data(isChina,i));
    
    casesOhio(i-2)      = sum(cases.data(isOhio,i));
    deathsOhio(i-2)      = sum(deaths.data(isOhio,i));
    recoveredOhio(i-2)  = sum(recovered.data(isOhio,i));
    
    casesFL(i-2)      = sum(cases.data(isFL,i));
    deathsFL(i-2)      = sum(deaths.data(isFL,i));
    recoveredFL(i-2)  = sum(recovered.data(isFL,i));
    
    casesNY(i-2)      = sum(cases.data(isNY,i));
    deathsNY(i-2)      = sum(deaths.data(isNY,i));
    recoveredNY(i-2)  = sum(recovered.data(isNY,i));
    
    casesEarth(i-2)      = sum(cases.data(:,i));
    deathsEarth(i-2)     = sum(deaths.data(:,i));
    recoveredEarth(i-2)   = sum(recovered.data(:,i));
    
%     casesC(i-2)         = sum(cases.data(isCountry,i));
%     deathsC(i-2)        = sum(deaths.data(isCountry,i));
%     recoveredC(i-2)     = sum(recovered.data(isCountry,i));
end

days = 1:length(casesUSA);


%-% DATA FITTING
% NY
% fNY    = fit(days',casesNY','exp1');
% fitNY  = @(x) fNY.a.*exp(fNY.b.*x);
% fUSA   = fit(days(43:end)',casesUSA(43:end)','exp1');
% fitUSA = @(x) fUSA.a.*exp(fUSA.b.*x);
%-% DATA PLOTTING


plotData('Earth',popEarth,casesEarth,deathsEarth,recoveredEarth)
plotData('USA',popUSA,casesUSA,deathsUSA,recoveredUSA)
plotData('Iceland',popIceland,casesIceland,deathsIceland,recoveredIceland)
plotData('Italy',popItaly,casesItaly,deathsItaly,recoveredItaly)
plotData('China',popChina,casesChina,deathsChina,recoveredChina)

plotData('Ohio',popOhio,casesOhio,deathsOhio,recoveredOhio)
plotData('Florida',popFlorida,casesFlorida,deathsFlorida,recoveredOhio)




%
fig501 = figure(501); clf;
hold on
H1=area(0:90,1.0*ones(size(0:90)),'FaceColor',[1 0 0],'FaceAlpha',0.6,'EdgeColor','none');
H1=area(0:90,0.10*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.01*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.0001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.00001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.000001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.0000001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
text(2,1.6,['100% Pop: ' num2str(1.0*popFL)]);
text(2,0.15,['10% Pop: ' num2str(0.1*popFL)]);
text(2,0.015,['1% Pop: ' num2str(0.01*popFL)]);
text(2,0.0015,['0.1% Pop: ' num2str(0.001*popFL)]);
text(2,0.00015,['0.01% Pop: ' num2str(0.0001*popFL)]);
text(length(casesFL)+3,casesFL(end)./popFL,['Cases: ' num2str(casesFL(end))]);
text(length(deathsFL)+3,deathsFL(end)./popFL,['Deaths: ' num2str(deathsFL(end))]);
p1 = semilogy(casesFL./popFL,'ko','DisplayName','Florida Confirmed Cases','MarkerSize',8);
p2 = semilogy(deathsFL./popFL,'ks','DisplayName','Florida Confirmed Deaths','MarkerSize',8);
p3 = semilogy(recoveredFL./popFL,'kp','DisplayName','Florida Confirmed Recovery','MarkerSize',10);
fig501.Children.YScale = 'log';
legend([p1 p2 p3])
grid on
title('Florida')
ylabel('Percent of total Population, %')
xlabel('Days Since Jan 22 2020')

fig600 = figure(600); clf;
hold on
H1=area(0:90,1.0*ones(size(0:90)),'FaceColor',[1 0 0],'FaceAlpha',0.6,'EdgeColor','none');
H1=area(0:90,0.10*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.01*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.0001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.00001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.000001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
H1=area(0:90,0.0000001*ones(size(0:90)),'FaceColor',[1 1 1],'FaceAlpha',0.2,'EdgeColor','none');
text(2,1.6,['100% Pop: ' num2str(1.0*popNY)])
text(2,0.15,['10% Pop: ' num2str(0.1*popNY)])
text(2,0.015,['1% Pop: ' num2str(0.01*popNY)])
text(2,0.0015,['0.1% Pop: ' num2str(0.001*popNY)])
text(2,0.00015,['0.01% Pop: ' num2str(0.0001*popNY)])
text(length(casesNY)+3,casesNY(end)./popNY,['Cases: ' num2str(casesNY(end))])
text(length(deathsNY)+3,deathsNY(end)./popNY,['Deaths: ' num2str(deathsNY(end))])
p1 = semilogy(casesNY./popNY,'ko','DisplayName','New York Confirmed Cases','MarkerSize',8);
p2 = semilogy(deathsNY./popNY,'ks','DisplayName','New York Confirmed Deaths','MarkerSize',8);
p3 = semilogy(recoveredNY./popNY,'kp','DisplayName','New York Confirmed Recovery','MarkerSize',10);
%p4 = semilogy(days+35,fitNY(days),'r-','LineWidth',2)
fig600.Children.YScale = 'log';
legend([p1 p2 p3])
grid on
title('New York')
ylabel('Percent of total Population, %')
xlabel('Days Since Jan 22 2020')
xlim([0 90])
ylim([1e-8 1])


